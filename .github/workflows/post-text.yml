name: Post Text Files to Discord

on:
  push:
    paths:
      - '**.txt'

jobs:
  post-text-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v42
        with:
          files: |
            **.txt

      - name: Get commit information
        id: commit-info
        run: |
          AUTHOR_NAME=$(git log -1 --pretty=format:'%an')
          COMMIT_MESSAGE=$(git log -1 --pretty=format:'%s')
          echo "author_name=$AUTHOR_NAME" >> $GITHUB_OUTPUT
          echo "commit_message=$COMMIT_MESSAGE" >> $GITHUB_OUTPUT

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests

      - name: Post text files to Discord
        if: steps.changed-files.outputs.any_changed == 'true'
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          import requests
          import os
          
          webhook_url = os.environ['DISCORD_WEBHOOK_URL']
          changed_files = '${{ steps.changed-files.outputs.all_changed_files }}'.split()
          author_name = '${{ steps.commit-info.outputs.author_name }}'
          commit_message = '${{ steps.commit-info.outputs.commit_message }}'
          
          for file_path in changed_files:
              if not os.path.exists(file_path):
                  continue
              
              with open(file_path, 'r') as file:
                  lines = file.readlines()
                  
                  # Ensure we have at least 3 lines
                  if len(lines) < 3:
                      print(f'Skipping {file_path}: Not enough lines')
                      continue
                  
                  # Clean up lines (remove leading/trailing whitespace)
                  lines = [line.strip() for line in lines]
                  
                  # Prepare the Discord message
                  discord_message = f"{author_name} posted \"{commit_message}\" for {os.path.basename(file_path)}:\n"
                  discord_message += f"**Prompt:** {lines[0]}\n"
                  discord_message += f"**Negative Prompt:** {lines[1]}\n"
                  discord_message += f"**Steps, Guide, Noise, LoRa str, LoRa:** {lines[2]}"
                  
                  # Send to Discord
                  data = {
                      'content': discord_message
                  }
                  
                  response = requests.post(webhook_url, json=data)
                  
                  if response.status_code == 204:
                      print(f'Successfully posted contents of {file_path} to Discord')
                  else:
                      print(f'Failed to post {file_path}. Status code: {response.status_code}')
        shell: python
